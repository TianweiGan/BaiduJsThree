/**
 * 检查给定的项是否为对象
 * @internal
 * @param {*} item - 需要检查的项
 * @returns {boolean} - 如果给定的项是对象且不是数组，则返回 true，否则返回 false
 */
export function isObject(item: any): boolean;
/**
 * 检查给定的值是否为数字
 * @internal
 * @param {*} num - 需要检查的值
 * @returns {boolean} - 如果给定的值是数字，则返回 true，否则返回 false
 */
export function isNumber(num: any): boolean;
/**
 * 检查给定的值是否已定义
 * @internal
 * @param {*} value - 需要检查的值
 * @returns {boolean} - 如果给定的值不是 undefined 且不是 null，则返回 true，否则返回 false
 */
export function defined(value: any): boolean;
/**
 * 返回给定两个参数中第一个非undefined和非null的值，如果两个参数都是undefined或null，则返回undefined。
 * @internal
 * @param {*} a 第一个参数
 * @param {*} b 第二个参数
 * @returns 返回给定两个参数中第一个非undefined和非null的值，如果两个参数都是undefined或null，则返回undefined。
 */
export function defaultValue(a: any, b: any): any;
/**
 * 深度合并对象
 * @internal
 * @param {Object} target - 目标对象
 * @param {...Object} sources - 需要合并的源对象
 * @returns {Object} - 合并后的对象
 */
export function deepMerge(target: Object, ...sources: Object[]): Object;
export function clone(object: any, deep?: boolean): any;
/**
 * Merges two objects, copying their properties onto a new combined object. When two objects have the same
 * property, the value of the property on the first object is used.  If either object is undefined,
 * it will be treated as an empty object.
 * @internal
 */
export function combine(object1: any, object2: any, deep: any): {};
