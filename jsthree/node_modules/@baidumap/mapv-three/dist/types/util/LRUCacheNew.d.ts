export class LRUCache {
    constructor(maxSize: any);
    maxSize: any;
    minSize: number;
    unloadPercent: number;
    itemSet: Map<any, any>;
    itemList: any[];
    usedSet: Set<any>;
    callbacks: Map<any, any>;
    unloadPriorityCallback: any;
    defaultPriorityCallback: (item: any) => any;
    setMaxSize(maxSize: any): void;
    isFull(): boolean;
    add(item: any, removeCb: any): boolean;
    remove(item: any): boolean;
    clear(): void;
    markUsed(item: any): void;
    markAllUnused(): void;
    unloadUnusedContent(): void;
    scheduleUnload(markAllUnused?: boolean): void;
    scheduled: boolean | undefined;
}
