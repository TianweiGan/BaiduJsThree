export class LineInstancedMesh {
    /**
     * 构造函数
     *
     * @param {object} model - 模型数据
     * @param {object} options - 可选配置参数
     * @param {number} options.gap - 节点间距，默认为100
     * @param {number} options.scale - 缩放比例，默认为1
     * @param {object} options.rotation - 旋转角度，默认为{x: 0, y: 0, z: 0}
     * @param {object} options.data - 数据 geojson或者[[x,y], [x,y] ... ]点数组
     */
    constructor(model: object, options?: {
        gap: number;
        scale: number;
        rotation: object;
        data: object;
    });
    /** @private */
    private _gap;
    /** @private */
    private _model;
    /** @private */
    private _meshs;
    /** @private */
    private _scale;
    /** @private */
    private _line;
    /** @private */
    private _options;
    /** @private */
    private _pointList;
    /** @private */
    private _instanceModel;
    _data: object;
    _transform: {
        scale: any;
        rotation: any;
    };
    afterAddToEngine(engine: any): void;
    _engine: any;
    onBeforeSceneRender(): void;
    visible: any;
    _initLine(data: any, engine: any): PathTracker;
    _getPositionList(): any[];
    _createInstanceModel(model: any): void;
    _meshes: object[] | undefined;
    _updateBufferData(): void;
    visibleCallback(): any;
    set data(value: object);
    get data(): object;
    set transform(value: {
        scale: any;
        rotation: any;
    });
    get transform(): {
        scale: any;
        rotation: any;
    };
    set gap(value: number);
    get gap(): number;
    set model(value: null);
    get model(): null;
    get pointList(): any[];
}
import { PathTracker } from '../../../threemap/animations/PathTracker';
