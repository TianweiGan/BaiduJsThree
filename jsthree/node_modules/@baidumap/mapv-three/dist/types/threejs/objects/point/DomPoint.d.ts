/**
 * DOM点对象，用于在地图上添加基于DOM的自定义信息窗口。可以结合事件绑定实现弹窗组件等功能。
 *
 * @category Objects
 * @example
 * ```javascript
 * // 创建一个基础的DomPoints
 * const domPoints = engine.add(new mapvthree.DomPoints({
 *     offset: [-270, -200]
 * }));
 *
 * // 自定义渲染函数, 创建dom元素
 * domPoints.renderItem = (value) => {
 *     const node = document.createElement('div');
 *     node.className = 'custom-point';
 *     node.innerHTML = `
 *         <div class="title">${value.attributes.name}</div>
 *         <div class="content">${value.attributes.description}</div>
 *     `;
 *     return node;
 * };
 *
 * // 设置数据源
 * const data = mapvthree.GeoJSONDataSource.fromGeoJSON([
 *     {
 *         type: 'Feature',
 *         geometry: {
 *             type: 'Point',
 *             coordinates: [116.404, 39.915]
 *         },
 *         properties: {
 *             name: '位置1',
 *             description: '这是位置1的描述'
 *         }
 *     }
 * ]);
 * domPoints.dataSource = data;
 * ```
 */
export class DomPoints extends GeoObject {
    /**
     * @readonly
     * 是否为DomPoints类型
     */
    readonly isDomPoints: true;
    /**
     * @readonly
     * 是否渲染视椎体外的物体，为false时需要渲染
     */
    readonly frustumCulled: false;
    /** @private */
    private _visible;
    points: any[];
    nodes: any[];
    offset: number[];
    /**
     * 用于生成dom节点, 若需要自定义dom元素，需要覆盖此方法
     * @returns {HTMLElement} dom节点
     * @param {Object} value 数据源中的数据项
     * @example
     * ```javascript
     * domPoints.renderItem = (value) => {
     *     const node = document.createElement('div');
     *     node.className = 'custom-point';
     *     node.innerHTML = `
     *         <div class="title">${value.attributes.name}</div>
     *         <div class="content">${value.attributes.description}</div>
     *     `;
     *     return node;
     * };
     * ```
     */
    renderItem(value: Object): HTMLElement;
    /**
     * @protected
     * 根据当前object的位置来计算node的偏移
     */
    protected onBeforeScenePrepareRenderHook: (engine: any, scene: any, camera: any) => void;
    container: any;
    clone(): any;
    /**
     * node节点是否可见
     */
    set visible(value: boolean);
    get visible(): boolean;
}
import { GeoObject } from '../GeoObject';
