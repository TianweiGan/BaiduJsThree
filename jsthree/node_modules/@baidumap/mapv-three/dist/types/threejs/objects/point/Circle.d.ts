/**
 * 用于高效绘制大量圆形。支持自定义颜色、大小、边框等属性。
 *
 * @category Objects
 * @example
 * ```javascript
 * const circle = engine.add(new mapvthree.Circle({
 *     color: '#f4f27a',
 *     borderWidth: 20,
 *     borderColor: '#b73145',
 *     opacity: 0.8,
 *     vertexSizes: true
 * }));
 * ```
 */
export class Circle extends GeoInstancedPointMesh {
    /**
     * 创建一个圆形实例化渲染对象
     * @param {Object} parameters 圆形配置参数
     * @param {string} [parameters.color] 圆形的填充颜色, 默认#ff8000
     * @param {number} [parameters.size] 圆形的大小, 默认100
     * @param {number} [parameters.opacity] 整体透明度 (0-1), 默认为1
     * @param {string} [parameters.type] 圆形渲染类型, 可选值: 'Gradient' | 'Default', 默认'Default'
     * @param {number} [parameters.borderWidth] 边框宽度（keepSize为true时单位为像素，否则为m）, 默认1
     * @param {string} [parameters.borderColor] 边框颜色, 默认#00ff00
     * @param {number} [parameters.borderOpacity] 边框透明度 (0-1), 默认1
     * @param {number} [parameters.fillOpacity] 填充区域透明度 (0-1), 默认为1
     * @param {boolean} [parameters.vertexColors] 是否启用顶点颜色, 默认false
     * @param {boolean} [parameters.vertexSizes] 是否启用顶点大小, 默认false
    */
    constructor(parameters: {
        color?: string | undefined;
        size?: number | undefined;
        opacity?: number | undefined;
        type?: string | undefined;
        borderWidth?: number | undefined;
        borderColor?: string | undefined;
        borderOpacity?: number | undefined;
        fillOpacity?: number | undefined;
        vertexColors?: boolean | undefined;
        vertexSizes?: boolean | undefined;
    });
    /**
     * @internal
     * 圆的颜色
     * @type {string}
     */
    color: string;
    /**
     * @internal
     * 圆的尺寸
     * @type {number}
     */
    size: number;
    /**
     * @internal
     * 圆的透明度
     * @type {number}
     */
    opacity: number;
    /**
     * @internal
     * 圆的边框颜色
     * @type {string}
     */
    borderColor: string;
    /**
     * @internal
     * 圆的边框宽度
     * @type {number}
     */
    borderWidth: number;
    /**
    * @internal
    * 圆的边框透明度
    * @type {number}
    */
    borderOpacity: number;
    /**
    * @internal
    * 圆的内部填充透明度
    * @type {number}
    */
    fillOpacity: number;
    parameters: {
        color?: string | undefined;
        size?: number | undefined;
        opacity?: number | undefined;
        type?: string | undefined;
        borderWidth?: number | undefined;
        borderColor?: string | undefined;
        borderOpacity?: number | undefined;
        fillOpacity?: number | undefined;
        vertexColors?: boolean | undefined;
        vertexSizes?: boolean | undefined;
    };
    collisionTest(data: any): {
        width: number;
        height: number;
    };
    /**
     * @internal
     * 获取实例的本地变换矩阵
     * @param {Array} coordinates 坐标数据
     * @param {Object} dataItem 数据项
     * @param {number} index 实例索引
     * @returns {Matrix4|null} 变换矩阵，如果不需要特殊变换则返回null
    */
    getInstanceLocalMatrix: (coordinates: any[], dataItem: Object, index: number) => Matrix4 | null;
}
import { GeoInstancedPointMesh } from './GeoInstancedPointMesh';
