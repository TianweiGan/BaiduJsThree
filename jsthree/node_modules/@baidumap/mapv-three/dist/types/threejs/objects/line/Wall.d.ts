/**
 * 墙体网格对象，用于在地图上创建无厚度的墙体效果。支持自定义高度、颜色、纹理和动画效果。
 *
 * @category Objects
 * @example
 * ```javascript
 * // 创建一个基础墙体
 * const wall = engine.add(new mapvthree.Wall({
 *     height: 200,
 *     color: '#00ffff',
 *     opacity: 0.8
 * }));
 *
 * // 设置数据源
 * const data = mapvthree.GeoJSONDataSource.fromGeoJSON([{
 *     type: 'Feature',
 *     geometry: {
 *         type: 'LineString',
 *         coordinates: [[116.404, 39.915], [116.405, 39.920]]
 *     }
 * }]);
 * wall.dataSource = data;
 *
 * // 添加动画效果
 * wall.enableAnimation = true;
 * wall.animationTailType = 3;
 * wall.animationSpeed = 1;
 * ```
*/
export class Wall extends GeoMesh {
    /**
    * 构造函数
    * @param {Object} parameters 配置参数
    * @param {number} [parameters.height=100] 墙的高度, 默认100
    * @param {string} [parameters.color='#00ffff'] 墙的颜色, 默认#00ffff
    * @param {boolean} [parameters.vertexColors=false] 是否通过数据携带颜色配置, 默认false
    * @param {string} [parameters.map] 纹理贴图的路径
    * @param {number|Array<number>} [parameters.mapScale=1] 纹理贴图的缩放系数, 默认1
    * @param {number} [parameters.opacity=1] 墙的整体透明系数, 默认1
    * @param {number} [parameters.minOpacity=0] 墙的最低透明度, 默认0
    * @param {number} [parameters.maxOpacity=1] 墙的最高透明度, 默认1
    * @param {boolean} [parameters.enableAnimation=false] 是否开启墙动画, 默认false
    * @param {number} [parameters.animationSpeed=1] 动画速度, 默认1
    * @param {number} [parameters.animationTailType=3] 动画类型, 默认3
    * @param {number} [parameters.animationTailRatio=0.2] 拖尾动画长度比例, 默认0.2
    * @param {number} [parameters.animationTailLength=100] 拖尾动画真实长度, 默认100
    * @param {number} [parameters.animationIdle=1000] 拖尾动画间隔时间, 默认1000
    * @param {number} [parameters.animationRatio=0.5] 条纹上升动画一组实虚线中实线所占比，范围0-1之间，仅在animationTailType=4.0时生效, 默认0.5
    * @param {number} [parameters.animationBales=5] 条纹上升动画显示组数，值大于等于1，仅在animationTailType=4.0时生效, 默认5
    */
    constructor(parameters: {
        height?: number | undefined;
        color?: string | undefined;
        vertexColors?: boolean | undefined;
        map?: string | undefined;
        mapScale?: number | number[] | undefined;
        opacity?: number | undefined;
        minOpacity?: number | undefined;
        maxOpacity?: number | undefined;
        enableAnimation?: boolean | undefined;
        animationSpeed?: number | undefined;
        animationTailType?: number | undefined;
        animationTailRatio?: number | undefined;
        animationTailLength?: number | undefined;
        animationIdle?: number | undefined;
        animationRatio?: number | undefined;
        animationBales?: number | undefined;
    });
    /** @protected */ protected geometry: any;
    /** @protected */ protected material: any;
    /**
     * 墙的高度
     * @type {number}
     * @default 100
     * @example
     * ```javascript
     * wall.height = 200;
     * ```
    */
    height: number;
    /**
     * 墙的颜色
     * @type {string}
     * @default '#00ffff'
     * @example
     * ```javascript
     * wall.color = '#ff0000';
     * ```
    */
    color: string;
    /**
     * 是否通过数据携带颜色配置
     * @type {boolean}
     * @default false
     * @example
     * ```javascript
     * wall.vertexColors = true;
     * ```
    */
    vertexColors: boolean;
    /**
     * 纹理贴图的路径
     * @type {string}
     * @default null
     * @example
     * ```javascript
     * wall.map = 'path/to/texture.png';
     * ```
    */
    map: string;
    /**
    * 墙的整体透明系数
    * @type {number}
    * @default 1
    * @example
    * ```javascript
    * wall.opacity = 0.8;
    * ```
    */
    opacity: number;
    /**
    * 墙的最低透明度
    * @type {number}
    * @default 0
    * @example
    * ```javascript
    * wall.minOpacity = 0.2;
    * ```
    */
    minOpacity: number;
    /**
    * 墙的最高透明度
    * @type {number}
    * @default 1
    * @example
    * ```javascript
    * wall.maxOpacity = 0.9;
    * ```
    */
    maxOpacity: number;
    /**
    * 是否开启墙动画
    * @type {boolean}
    * @default false
    * @example
    * ```javascript
    * wall.enableAnimation = true;
    * ```
    */
    enableAnimation: boolean;
    /**
    * 动画速度
    * @type {number}
    * @default 1
    * @example
    * ```javascript
    * wall.animationSpeed = 2;
    * ```
    */
    animationSpeed: number;
    /**
    * 动画类型
    * - 1: 按墙长度比例，需设置`animationTailRatio`属性
    * - 2: 按固定长度，需设置`animationTailLength`属性
    * - 3: 垂直方向动画
    * - 4: 条纹上升动画
    * @type {1|2|3|4}
    * @default 3
    * @example
    * ```javascript
    * // 设置为垂直方向动画
    * wall.animationTailType = 3;
    * ```
    */
    animationTailType: 1 | 2 | 3 | 4;
    /**
    * 拖尾动画长度比例
    * @type {number}
    * @default 0.2
    * @example
    * ```javascript
    * wall.animationTailRatio = 0.3;
    * ```
    */
    animationTailRatio: number;
    /**
     * 拖尾动画真实长度
     * @type {number}
     * @default 100
     * @example
     * ```javascript
     * wall.animationTailLength = 200;
     * ```
     */
    animationTailLength: number;
    /**
    * 拖尾动画间隔时间，单位：毫秒
    * @type {number}
    * @default 1000
    * @example
    * ```javascript
    * wall.animationIdle = 2000;
    * ```
    */
    animationIdle: number;
    /**
     * 条纹上升动画一组实虚线中实线所占比
     * @type {number}
     * @default 0.5
     * @example
     * ```javascript
     * wall.animationRatio = 0.7;
     * ```
     */
    animationRatio: number;
    /**
    * 条纹上升动画显示组数
    * @type {number}
    * @default 5
    * @example
    * ```javascript
    * wall.animationBales = 3;
    * ```
    */
    animationBales: number;
    parameters: {
        height?: number | undefined;
        color?: string | undefined;
        vertexColors?: boolean | undefined;
        map?: string | undefined;
        mapScale?: number | number[] | undefined;
        opacity?: number | undefined;
        minOpacity?: number | undefined;
        maxOpacity?: number | undefined;
        enableAnimation?: boolean | undefined;
        animationSpeed?: number | undefined;
        animationTailType?: number | undefined;
        animationTailRatio?: number | undefined;
        animationTailLength?: number | undefined;
        animationIdle?: number | undefined;
        animationRatio?: number | undefined;
        animationBales?: number | undefined;
    };
    /** @internal */
    getDefaultParams(): {
        height: number;
    };
}
import { GeoMesh } from '../GeoMesh';
