export class WallGeometry {
    constructor(parameters: any);
    isWallGeometry: boolean;
    /** @private */
    private _needsUpdate;
    _height: any;
    parameters: any;
    setData(data: any): void;
    cachedData: any;
    isClockWise: (contour: any) => boolean;
    subdivideLine: (p0: any, p1: any, minDistance: any, ellipsoid: any, topPositions: any, bottomPositions: any) => {
        topPositions: any;
        bottomPositions: any;
    };
    computeWallGeometry3D(positions: any, ellipsoid: any, granularity: any, indexOffset: any): {
        edgePositions: any[];
        edgeIndices: any[];
        edgeNormals: any[];
        edgeUvs: number[];
        totalDistance: number[];
    };
    updateGeometry3D(): void;
    cachedPositions: any[] | undefined;
    updateGeometryColumbus(): void;
    updateGeometry(): void;
    set needsUpdate(value: boolean);
    get needsUpdate(): boolean;
    set height(value: any);
    get height(): any;
}
