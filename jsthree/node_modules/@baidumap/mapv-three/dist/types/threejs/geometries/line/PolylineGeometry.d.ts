export class PolylineGeometry {
    constructor(parameters: any);
    isFatLineGeometry: boolean;
    parameters: any;
    _granularity: any;
    _needsUpdate: boolean;
    _needsCounter: boolean;
    _height: any;
    _flags: {
        lastFlip: number;
        started: boolean;
        normal: null;
        totalDistance: number;
    };
    setData(data: any): void;
    cachedData: any;
    set needsUpdate(value: boolean);
    get needsUpdate(): boolean;
    updateGeometryColumbus(data: any): void;
    cachedPositions: any[] | undefined;
    cachedPrevs: any[] | undefined;
    cachedNexts: any[] | undefined;
    updateGeometry3D(data: any): void;
    updateGeometry(): void;
    packAttribute(positionArray: any, positions: any, prevs: any, nexts: any, uvs: any, expandAndPrev: any): void;
    generateArcColumbus(options: any): any[];
    generateArc(options: any): any[];
    generateCartesianArc(p0: any, p1: any, minDistance: any, ellipsoid: any, h0: any, h1: any, array: any, offset: any, normal: any, normals: any, widths: any, width: any): any;
}
