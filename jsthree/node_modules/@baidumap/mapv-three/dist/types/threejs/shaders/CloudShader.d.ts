export namespace CloudShader {
    export namespace uniforms {
        namespace weatherMap {
            let value: null;
        }
        namespace noiseMap {
            let value_1: null;
            export { value_1 as value };
        }
        namespace blueNoiseMap {
            let value_2: null;
            export { value_2 as value };
        }
        namespace shapeNoiseMap {
            let value_3: null;
            export { value_3 as value };
        }
        namespace coverage {
            let value_4: number;
            export { value_4 as value };
        }
        namespace density {
            let value_5: number;
            export { value_5 as value };
        }
        namespace time {
            let value_6: number;
            export { value_6 as value };
        }
        namespace speed {
            let value_7: number;
            export { value_7 as value };
        }
        namespace sizeScale {
            let value_8: number;
            export { value_8 as value };
        }
        namespace skyMap {
            let value_9: null;
            export { value_9 as value };
        }
        namespace sunLightMap {
            let value_10: null;
            export { value_10 as value };
        }
        namespace skyAltitude {
            let value_11: number;
            export { value_11 as value };
        }
        namespace thicknessBias {
            let value_12: number;
            export { value_12 as value };
        }
        namespace thicknessScale {
            let value_13: number;
            export { value_13 as value };
        }
        namespace mixGrayFactor {
            let value_14: number;
            export { value_14 as value };
        }
        namespace sunColor {
            let value_15: number[];
            export { value_15 as value };
        }
        namespace isEmissive {
            let value_16: boolean;
            export { value_16 as value };
        }
    }
    export { mainVertShader as vertexShader };
    export { mainFragShader as fragmentShader };
}
