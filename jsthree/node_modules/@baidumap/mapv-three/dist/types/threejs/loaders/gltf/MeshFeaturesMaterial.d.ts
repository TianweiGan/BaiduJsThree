export function MeshFeaturesMaterialMixin(base: any): {
    new (...args: any[]): {
        [x: string]: any;
        featureTexture: null;
        nullFeatureId: null;
        highlightFeatureId: number;
        isMeshFeaturesMaterial: boolean;
        uniforms: {
            featureChannelsLength: {
                value: number;
            };
            featureChannels: {
                value: any[];
            };
            featureTexture: {
                value: null;
            };
            nullFeatureId: {
                value: null;
            };
            highlightFeatureId: {
                value: number;
            };
        };
        defines: {} | undefined;
        copy(source: any): void;
        needsUpdate: boolean | undefined;
        setDefine(define: any, value: any): void;
        setFromMeshFeatures(meshFeatures: any, featureIdOrName: any): void;
        disableFeatureDisplay(): void;
        _setTextureFeature(texture: any, uv: any, channels: any): void;
        _setAttributeFeature(attribute?: null): void;
        customProgramCacheKey(): string;
        onBeforeCompile(shader: any): void;
    };
    [x: string]: any;
};
export const MeshFeaturesMaterial: {
    new (...args: any[]): {
        [x: string]: any;
        featureTexture: null;
        nullFeatureId: null;
        highlightFeatureId: number;
        isMeshFeaturesMaterial: boolean;
        uniforms: {
            featureChannelsLength: {
                value: number;
            };
            featureChannels: {
                value: any[];
            };
            featureTexture: {
                value: null;
            };
            nullFeatureId: {
                value: null;
            };
            highlightFeatureId: {
                value: number;
            };
        };
        defines: {} | undefined;
        copy(source: any): void;
        needsUpdate: boolean | undefined;
        setDefine(define: any, value: any): void;
        setFromMeshFeatures(meshFeatures: any, featureIdOrName: any): void;
        disableFeatureDisplay(): void;
        _setTextureFeature(texture: any, uv: any, channels: any): void;
        _setAttributeFeature(attribute?: null): void;
        customProgramCacheKey(): string;
        onBeforeCompile(shader: any): void;
    };
    [x: string]: any;
};
