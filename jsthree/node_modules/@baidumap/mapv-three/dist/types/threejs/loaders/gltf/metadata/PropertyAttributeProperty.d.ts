export default PropertyAttributeProperty;
/**
 * A property in a property attribute from EXT_structural_metadata.
 *
 * <p>
 * See the {@link https://github.com/CesiumGS/glTF/tree/3d-tiles-next/extensions/2.0/Vendor/EXT_structural_metadata|EXT_structural_metadata Extension}
 * </p>
 *
 * @param {object} options Object with the following properties:
 * @param {object} options.property The property JSON object.
 * @param {MetadataClassProperty} options.classProperty The class property.
 *
 * @alias PropertyAttributeProperty
 * @constructor
 *
 * @private
 * @experimental This feature is using part of the 3D Tiles
 * spec that is not final and is subject to change without Cesium's standard deprecation policy.
 */
declare class PropertyAttributeProperty {
    constructor(options: any);
    _attribute: any;
    _classProperty: any;
    _min: any;
    _max: any;
    _offset: any;
    _scale: any;
    _hasValueTransform: any;
    _extras: any;
    _extensions: any;
    /**
   * The attribute semantic
   *
   * @memberof PropertyAttributeProperty.prototype
   * @type {string}
   * @readonly
   * @private
   */
    private readonly get attribute();
    /**
   * True if offset/scale should be applied. If both offset/scale were
   * undefined, they default to identity so this property is set false
   *
   * @memberof MetadataClassProperty.prototype
   * @type {boolean}
   * @readonly
   * @private
   */
    private readonly get hasValueTransform();
    /**
   * The offset to be added to property values as part of the value transform.
   *
   * @memberof MetadataClassProperty.prototype
   * @type {number|Cartesian2|Cartesian3|Cartesian4|Matrix2|Matrix3|Matrix4}
   * @readonly
   * @private
   */
    private readonly get offset();
    /**
   * The scale to be multiplied to property values as part of the value transform.
   *
   * @memberof MetadataClassProperty.prototype
   * @type {number|Cartesian2|Cartesian3|Cartesian4|Matrix2|Matrix3|Matrix4}
   * @readonly
   * @private
   */
    private readonly get scale();
    /**
   * The properties inherited from this property's class
   *
   * @memberof PropertyAttributeProperty.prototype
   * @type {MetadataClassProperty}
   * @readonly
   * @private
   */
    private readonly get classProperty();
    /**
   * Extra user-defined properties.
   *
   * @memberof PropertyAttributeProperty.prototype
   * @type {*}
   * @readonly
   * @private
   */
    private readonly get extras();
    /**
   * An object containing extensions.
   *
   * @memberof PropertyAttributeProperty.prototype
   * @type {*}
   * @readonly
   * @private
   */
    private readonly get extensions();
}
