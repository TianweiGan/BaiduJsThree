export default ScreenSpaceCameraController;
export function ScreenSpaceCameraController(scene: any): void;
export class ScreenSpaceCameraController {
    constructor(scene: any);
    enableInputs: boolean;
    enableTranslate: boolean;
    enableZoom: boolean;
    enableRotate: boolean;
    enableTilt: boolean;
    enableLook: boolean;
    enableFixCenter: boolean;
    enableTerrainCollision: boolean;
    /**
     * 惯性0-1
     * @type {Number}
     * @default 0.9
     */
    inertiaSpin: number;
    inertiaTranslate: number;
    inertiaZoom: number;
    maximumMovementRatio: number;
    bounceAnimationTime: number;
    minimumZoomDistance: number;
    maximumZoomDistance: number;
    translateEventTypes: number;
    zoomEventTypes: number[];
    rotateEventTypes: number;
    tiltEventTypes: (number | {
        eventType: number;
        modifier: number;
    })[];
    lookEventTypes: {
        eventType: number;
        modifier: number;
    };
    minimumPickingTerrainHeight: number;
    _minimumPickingTerrainHeight: number;
    minimumPickingTerrainDistanceWithInertia: number;
    minimumCollisionTerrainHeight: number;
    _minimumCollisionTerrainHeight: number;
    minimumTrackBallHeight: number;
    _minimumTrackBallHeight: number;
    enableCollisionDetection: boolean;
    _scene: any;
    _globe: any;
    _ellipsoid: any;
    _lastGlobeHeight: number;
    _aggregator: CameraEventAggregator;
    _lastInertiaSpinMovement: any;
    _lastInertiaZoomMovement: any;
    _lastInertiaTranslateMovement: any;
    _lastInertiaTiltMovement: any;
    _inertiaDisablers: {
        _lastInertiaZoomMovement: string[];
        _lastInertiaTiltMovement: string[];
    };
    _horizontalRotationAxis: any;
    _tiltCenterMousePosition: any;
    _tiltCenter: any;
    _translateMousePosition: any;
    _rotateMousePosition: any;
    _rotateStartPosition: any;
    _strafeStartPosition: any;
    _strafeMousePosition: any;
    _strafeEndMousePosition: any;
    _zoomMouseStart: any;
    _zoomWorldPosition: any;
    _useZoomWorldPosition: boolean;
    _panLastMousePosition: any;
    _panLastWorldPosition: any;
    _tiltCVOffMap: boolean;
    _looking: boolean;
    _rotating: boolean;
    _strafing: boolean;
    _zoomingOnVector: boolean;
    _zoomingUnderground: boolean;
    _rotatingZoom: boolean;
    _adjustedHeightForTerrain: boolean;
    _cameraUnderground: boolean;
    _maxCoord: any;
    _zoomFactor: number;
    _rotateFactor: number | undefined;
    _rotateRateRangeAdjustment: any;
    _maximumRotateRate: number;
    _minimumRotateRate: number;
    _minimumZoomRate: number;
    _maximumZoomRate: number;
    _minimumUndergroundPickDistance: number;
    _maximumUndergroundPickDistance: number;
    private onMap;
    private update;
    isDestroyed(): boolean;
    destroy(): undefined;
}
import { CameraEventAggregator } from './CameraEventAggregator';
