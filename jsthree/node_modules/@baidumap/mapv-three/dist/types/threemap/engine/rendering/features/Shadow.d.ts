export class FeatureShadow extends Feature {
    constructor(rendering: any, options: any);
    /** @private
     * default | csm
     * */
    private _method;
    /** @private */
    private _lastMethod;
    /** @private */
    private _lastEnabled;
    /**
     * @type {number}
     * 适用于简单投影模型，平行光只用一个shadowMap
     * 平行光投影的基准高度，越接近此值，阴影越清晰，阴影范围越小
     */
    _baseHeight: number;
    enabled: any;
    _enableNewMethod(): void;
    _defaultShadow: DefaultShadow | null | undefined;
    _currentShaderKey: string | undefined;
    _csmShadow: CSMShadow | null | undefined;
    _disableOldMethod(): void;
    updateShadow: (light: any, direction: any, parent: any) => void;
    getCurrentUsedTextures: () => any[] | undefined;
    updateCSMShadow: (material: any, shader: any) => void;
    getCurrentShaderKey(): string | undefined;
    set baseHeight(height: number);
    get baseHeight(): number;
    set method(value: string);
    get method(): string;
}
import { Feature } from './Feature';
import { DefaultShadow } from './shadow/DefaultShadow';
import { CSMShadow } from './shadow/CSMShadow';
