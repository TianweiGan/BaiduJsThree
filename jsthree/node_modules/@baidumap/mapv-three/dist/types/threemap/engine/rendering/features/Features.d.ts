export class Features {
    constructor(rendering: any, options: any);
    /** @private */
    private _features;
    _rendering: any;
    _bloom: FeatureBloom;
    _antialias: FeatureAntialias;
    _ao: FeatureAo;
    _reflection: FeatureReflection;
    _bufferView: FeatureBufferView;
    _stats: FeatureStats;
    _shadow: FeatureShadow;
    _depthPicking: FeatureDepthPicking;
    _colorAdjustment: FeatureColorAdjustment;
    _cameraFusion: FeatureCameraFusion;
    _hdr: FeatureHDR;
    beginFrame(): void;
    afterRender(): void;
    endFrame(): void;
    updateReqirements(requirements: any): void;
    get ao(): FeatureAo;
    get bloom(): FeatureBloom;
    get stats(): FeatureStats;
    get bufferView(): FeatureBufferView;
    get antialias(): FeatureAntialias;
    get reflection(): FeatureReflection;
    get features(): any[];
    get shadow(): FeatureShadow;
    get depthPicking(): FeatureDepthPicking;
    get colorAdjustment(): FeatureColorAdjustment;
    get cameraFusion(): FeatureCameraFusion;
    get hdr(): FeatureHDR;
}
import { FeatureBloom } from './Bloom';
import { FeatureAntialias } from './Antialias';
import { FeatureAo } from './Ao';
import { FeatureReflection } from './Reflection';
import { FeatureBufferView } from './BufferView';
import { FeatureStats } from './Stats';
import { FeatureShadow } from './Shadow';
import { FeatureDepthPicking } from './DepthPicking';
import { FeatureColorAdjustment } from './ColorAdjustment';
import { FeatureCameraFusion } from './CameraFusion';
import { FeatureHDR } from './HDR';
