export class RenderingComposition {
    constructor(rendering: any);
    /** @private */
    private _enabled;
    /** @private */
    private _rendering;
    /** @private */
    private _renderPass;
    /** @private */
    private _tDiffuse;
    /** @private */
    private _tDepth;
    /** @private */
    private _tNormal;
    /** @private */
    private _tSpecular;
    /** @private */
    private _tBloom;
    /** @private */
    private _tReflection;
    /** @private */
    private _useMrt;
    set useMrt(value: boolean);
    get useMrt(): boolean;
    set enabled(value: boolean);
    get enabled(): boolean;
    _init(): void;
    set colorAdjustEnabled(value: any);
    get colorAdjustEnabled(): any;
    set adjustBrightnessFactor(value: any);
    get adjustBrightnessFactor(): any;
    set adjustContrastFactor(value: any);
    get adjustContrastFactor(): any;
    set adjustSaturationFactor(value: any);
    get adjustSaturationFactor(): any;
    render(): void;
    dispose(): void;
    set debugTextures(textures: any);
    set tDiffuse(tDiffuse: any);
    set tDepth(tDepth: any);
    set tNormal(tNormal: any);
    set tBloom(tBloom: any);
    set tReflection(tReflection: any);
    set tSpecular(tSpecular: any);
    set coverageIntensity(value: any);
    get coverageIntensity(): any;
    set tCoverageIntensity(value: any);
    get tCoverageIntensity(): any;
    get debugDimension(): any;
    get debugOffset(): any;
    set tEnv(tEnv: any);
    get tEnv(): any;
    set useFog(value: any);
    get useFog(): any;
    set fogDensity(value: any);
    get fogDensity(): any;
    set fogSkyColorStartFactor(value: any);
    get fogSkyColorStartFactor(): any;
    set fogAltitudeBottom(value: any);
    get fogAltitudeBottom(): any;
    set fogAltitudeTop(value: any);
    get fogAltitudeTop(): any;
}
