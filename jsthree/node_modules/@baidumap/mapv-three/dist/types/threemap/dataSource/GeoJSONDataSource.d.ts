/**
 * GeoJSON格式数据的数据源，支持加载标准GeoJSON对象或通过URL加载远程数据
 *
 * GeoJSONDataSource专门处理标准GeoJSON格式的地理数据，支持以下形式：
 * - FeatureCollection（特征集合）
 * - Feature（单个特征）
 * - Features数组（特征数组）
 *
 * 支持所有标准GeoJSON几何类型：
 * - Point（点）
 * - LineString（线）
 * - Polygon（面）
 * - MultiPoint（多点）
 * - MultiLineString（多线）
 * - MultiPolygon（多面）
 *
 * @category DataSource
 * @example
 * ```javascript
 * // 示例1: 从GeoJSON对象创建
 * const geojson = {
 *   type: 'FeatureCollection',
 *   features: [{
 *     type: 'Feature',
 *     geometry: {
 *       type: 'Point',
 *       coordinates: [116.39, 39.9]
 *     },
 *     properties: {
 *       name: '北京',
 *       value: 100
 *     }
 *   }]
 * };
 * const dataSource = GeoJSONDataSource.fromGeoJSON(geojson);
 *
 * // 示例2: 从URL加载
 * const dataSource = await GeoJSONDataSource.fromURL('path/to/data.geojson');
 * ```
 */
export class GeoJSONDataSource extends DataSource {
    /**
     * 从GeoJSON对象创建数据源实例
     * @param {object} geoJSONObject GeoJSON数据对象
     * @param {object} [options] 配置选项，传递给{@link DataSource}构造函数
     * @returns {GeoJSONDataSource} 新创建的数据源实例
     * @example
     * ```javascript
     * const dataSource = GeoJSONDataSource.fromGeoJSON({
     *   type: 'FeatureCollection',
     *   features: [...]
     * });
     * ```
     */
    static fromGeoJSON: (geoJSONObject: object, options?: object) => GeoJSONDataSource;
    /**
     * 从URL异步加载GeoJSON数据
     * @param {string} url 数据的URL路径
     * @param {object} [options] 配置选项，传递给{@link DataSource}构造函数
     * @returns {Promise<GeoJSONDataSource>} 包含数据源实例的Promise
     * @example
     * ```javascript
     * const dataSource = await GeoJSONDataSource.fromURL('path/to/data.geojson');
     * console.log(`加载了${dataSource.size}个数据项`);
     * ```
     */
    static fromURL: (url: string, options?: object) => Promise<GeoJSONDataSource>;
    /**
     * @internal
     * @deprecated 已废弃，请使用{@link GeoJSONDataSource.fromGeoJSON}
     * @param {object} object GeoJSON数据对象
     * @param {object} [options] 配置选项
     * @returns {GeoJSONDataSource} 数据源实例
     */
    static fromGeoJSONObject: (object: object, options?: object) => GeoJSONDataSource;
    /**
     * @internal
     * @deprecated 已废弃，请使用{@link GeoJSONDataSource.fromGeoJSON}
     * @param {object} object GeoJSON数据对象
     * @param {object} [options] 配置选项
     * @returns {GeoJSONDataSource} 数据源实例
     */
    static fromObject: (object: object, options?: object) => GeoJSONDataSource;
    /**
     * 创建GeoJSONDataSource实例
     * @param {object} [options] 配置选项，传递给{@link DataSource}构造函数
     */
    constructor(options?: object);
    type: string;
}
import { DataSource } from './DataSource';
