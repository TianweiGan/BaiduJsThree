export default class Executer {
    constructor(sourceLayer: any, mapboxStyle: any, displayOptions: any, tileConfig: any);
    /** @type {import('../sourceLayer').default} */
    _sourceLayer: import("../sourceLayer").default;
    _filterCache: {};
    /** @type {import('../style').default} */
    _mapboxStyle: import("../style").default;
    _displayOptions: {};
    _background: {
        colors: never[];
        vertices: never[];
        uvs: never[];
        normals: never[];
        indices: never[];
        layerIndices: never[];
    };
    _fill_opaque: {
        colors: number;
        vertices: number;
        uvs: number;
        normals: number;
        indices: number;
        layerIndices: number;
    };
    _fill_translucent: {
        colors: number;
        vertices: number;
        uvs: number;
        normals: number;
        indices: number;
        layerIndices: number;
    };
    _fill_water: {
        colors: number;
        vertices: number;
        uvs: number;
        normals: number;
        indices: number;
        layerIndices: number;
    };
    _fill_wood: {
        colors: number;
        vertices: number;
        uvs: number;
        normals: number;
        indices: number;
        layerIndices: number;
    };
    _fill_pattern: {
        colors: number;
        vertices: number;
        uvs: number;
        normals: number;
        indices: number;
        layerIndices: number;
        icons: number;
    };
    _fill_extrusion_opaque: {
        colors: number;
        vertices: number;
        uvs: number;
        normals: number;
        indices: number;
        indices_side: number;
        layerIndices: number;
        extentVertices: number;
    };
    _fill_extrusion_translucent: {
        colors: number;
        vertices: number;
        uvs: number;
        normals: number;
        indices: number;
        indices_side: number;
        layerIndices: number;
        extentVertices: number;
    };
    _line_opaque: {
        colors: number;
        vertices: number;
        normals: number;
        indices: number;
        widths: number;
        layerIndices: number;
        extentVertices: number;
    };
    _line_dashed: {
        colors: number;
        vertices: number;
        normals: number;
        indices: number;
        widths: number;
        layerIndices: number;
        extentVertices: number;
        lengths: number;
        dashArrays: number;
        dashRatios: number;
    };
    _line_translucent: {
        colors: number;
        vertices: number;
        normals: number;
        indices: number;
        widths: number;
        layerIndices: number;
        extentVertices: number;
    };
    _symbol: {
        symbols: never[];
    };
    /** @type {Array<object>} */
    _fillOpaqueArray: Array<object>;
    /** @type {Array<object>} */
    _fillTranslucentArray: Array<object>;
    /** @type {Array<object>} */
    _fillWaterArray: Array<object>;
    /** @type {Array<object>} */
    _fillWoodArray: Array<object>;
    /** @type {Array<object>} */
    _fillExtrusionOpaqueArray: Array<object>;
    /** @type {Array<object>} */
    _fillExtrusionTranslucentArray: Array<object>;
    /** @type {Array<object>} */
    _fillPatternArray: Array<object>;
    /** @type {Array<object>} */
    _lineOpaqueArray: Array<object>;
    /** @type {Array<object>} */
    _lineTranslucentArray: Array<object>;
    /** @type {Array<object>} */
    _lineDashedArray: Array<object>;
    _tileConfig: any;
    /**
     * 处理feature和style 返回three需要的顶点、颜色、法向量等相关数据
     */
    execute(): void;
    getExecutedData(result: any): number;
    _flatArray(target: any, source: any, offset: any): void;
    _generatorBufferArray(type: any): {
        vertices: Float32Array<ArrayBuffer>;
        colors: Float32Array<ArrayBuffer>;
        normals: Float32Array<ArrayBuffer>;
        layerIndices: Float32Array<ArrayBuffer>;
        indices: Uint32Array<ArrayBuffer>;
    } | null | undefined;
    _mergeArray(executer: any, executedData: any): void;
    _setupBackgroundLayer(styleLayer: any, zoom: any): void;
    _getConstructor(feature: any, styleLayer: any): typeof FillExtrusionExecuter | typeof FillExecuter | typeof LineExecuter | typeof SymbolExecuter | null;
}
import FillExtrusionExecuter from './fill-extrusion';
import FillExecuter from './fill';
import LineExecuter from './line';
import SymbolExecuter from './symbol';
