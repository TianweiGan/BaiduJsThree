export default class FillExtrusionExecuter {
    constructor(feature: any, styleLayer: any, sourceLayer: any, mapboxStyle: any);
    /** @type {import('../sourceLayer').default} */
    _sourceLayer: import("../sourceLayer").default;
    /** @type {import('../style').default} */
    _mapboxStyle: import("../style").default;
    _feature: any;
    _styleLayer: any;
    _color: any;
    _colors_opaque: any[];
    _vertices_opaque: any[];
    _uvs_opaque: any[];
    _indices_opaque: any[];
    _indices_opaque_side: any[];
    _normals_opaque: any[];
    _layerIndices_opaque: any[];
    _extent_vertices_opaque: any[];
    _colors_translucent: any[];
    _vertices_translucent: any[];
    _uvs_translucent: any[];
    _indices_translucent: any[];
    _indices_translucent_side: any[];
    _normals_translucent: any[];
    _layerIndices_translucent: any[];
    _extent_vertices_translucent: any[];
    execute(layerIndex: any): void;
    getExecutedData(): {
        colors_opaque: any[];
        vertices_opaque: any[];
        uvs_opaque: any[];
        indices_opaque: any[];
        indices_opaque_side: any[];
        normals_opaque: any[];
        layerIndices_opaque: any[];
        colors_translucent: any[];
        vertices_translucent: any[];
        uvs_translucent: any[];
        indices_translucent: any[];
        indices_translucent_side: any[];
        normals_translucent: any[];
        layerIndices_translucent: any[];
        extentVertices_opaque: any[];
        extentVertices_translucent: any[];
    };
    _getStyleValue(type: any, property: any): any;
    _getFillColor(): void;
    _sideColor: {
        r: number;
        g: number;
        b: number;
    } | undefined;
    _base: any;
    _height: any;
    _loadGeometry(layerIndex: any): void;
    _crossVectors3: (a: any, b: any) => number[];
    _getDistance2: (p1: any, p2: any) => number;
    _getOutLineColor(): void;
    _getFillPattern(): void;
    _getRenderingAttributes(): {
        colors: any;
        vertices: any;
        uvs: any;
        indices: any;
        indicesSide: any;
        normals: any;
        layerIndices: any[];
        extentVertices: any;
        getIndexOffset: string;
        setIndexOffset: string;
    };
}
