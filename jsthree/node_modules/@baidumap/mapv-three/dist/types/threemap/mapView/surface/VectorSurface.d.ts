/**
 * 矢量瓦片数据加载的surface，用于加载矢量瓦片数据<br/>
 * vector surface需要将原始矢量数据转换到map的投影模式，但网格以tileProvider原始数据为准
 *
 * @category MapView
 * @example
 * ```javascript
 * const mapView = engine.add(new MapView());
 * const vectorSurface = new VectorSurface(vectorTileProvider);
 * mapView.addSurface(vectorSurface);
 * ```
 */
export class VectorSurface extends MapSurface {
    /**
     * @param {VectorProvider} vectorTileProvider - 矢量提供者
     * @param {Object} options - 选项参数
     */
    constructor(vectorTileProvider: VectorProvider, options?: Object);
    isMapVectorSurface: boolean;
    /** @private */
    private _useTargetProjectionBoundingBox;
    _tileProvider: VectorProvider;
    _surfaceTileManager: VectorSurfaceTileManager;
    _getCurrentGrid(): any;
    _onTileCreated: (tile: any) => void;
    /**
     * @internal
     * 初始化帧。
     * @param renderState 渲染状态对象。
     */
    beginFrame(renderState: any): false | undefined;
    _shouldRenderPlaceholder: any;
    /**
     * 设置矢量提供者
     */
    set tileProvider(tileProvider: VectorProvider);
    /**
     * 获取矢量提供者
     */
    get tileProvider(): VectorProvider;
}
import { MapSurface } from './MapSurface';
import { VectorSurfaceTileManager } from '../tileManager/VectorSurfaceTileManager';
