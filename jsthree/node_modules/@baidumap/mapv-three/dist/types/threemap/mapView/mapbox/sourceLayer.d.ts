/**
 * @file 存储每个瓦片的数据
 */
export default class SourceLayer {
    constructor(layers: {} | undefined, indexOffset: any, tileKey: any);
    _layers: {};
    _fillOpaqueIndexOffset: number;
    _fillTranslucentIndexOffset: number;
    _fillExtrusionOpaqueIndexOffset: number;
    _fillExtrusionTranslucentIndexOffset: number;
    _fillPatternIndexOffset: number;
    _lineOpaqueIndexOffset: number;
    _lineTranslucentIndexOffset: number;
    _lineDashedIndexOffset: number;
    _fillWaterIndexOffset: number;
    _fillWoodIndexOffset: number;
    /**
     * @private
     * @type {number}
     */
    private _iconIndexOffset;
    tileKey: {
        x: number;
        y: number;
        z: number;
    };
    tileSize: number;
    setDefaultIndexOffset(indexOffset: any): void;
    getTileLayer(name: any): any;
    setFillOpaqueIndexOffset(num: any): void;
    setFillTranslucentIndexOffset(num: any): void;
    setFillExtrusionOpaqueIndexOffset(num: any): void;
    setFillExtrusionTranslucentIndexOffset(num: any): void;
    setFillPatternIndexOffset(num: any): void;
    setLineOpaqueIndexOffset(num: any): void;
    setLineTranslucentIndexOffset(num: any): void;
    setLineDashedIndexOffset(num: any): void;
    getFillOpaqueIndexOffset(): number;
    getFillTranslucentIndexOffset(): number;
    getFillExtrusionOpaqueIndexOffset(): number;
    getFillExtrusionTranslucentIndexOffset(): number;
    getFillPatternIndexOffset(): number;
    getLineOpaqueIndexOffset(): number;
    getLineTranslucentIndexOffset(): number;
    getLineDashedIndexOffset(): number;
    setFillWaterIndexOffset(num: any): void;
    getFillWaterIndexOffset(): number;
    setFillWoodIndexOffset(num: any): void;
    getFillWoodIndexOffset(): number;
    setIconIndexOffset(num: any): void;
    getIconIndexOffset(): number;
    setLayers(layers?: {}): void;
}
