export default class FillExecuter {
    constructor(feature: any, styleLayer: any, sourceLayer: any, mapboxStyle: any);
    /** @type {import('../sourceLayer').default} */
    _sourceLayer: import("../sourceLayer").default;
    /** @type {import('../style').default} */
    _mapboxStyle: import("../style").default;
    _feature: any;
    _styleLayer: any;
    _color: any;
    _iconData: any;
    _colors_water: any[];
    _vertices_water: any[];
    _uvs_water: any[];
    _indices_water: any[];
    _normals_water: any[];
    _layerIndices_water: any[];
    _colors_wood: any[];
    _vertices_wood: any[];
    _uvs_wood: any[];
    _indices_wood: any[];
    _normals_wood: any[];
    _layerIndices_wood: any[];
    _colors_opaque: any[];
    _vertices_opaque: any[];
    _uvs_opaque: any[];
    _indices_opaque: any[];
    _normals_opaque: any[];
    _layerIndices_opaque: any[];
    _colors_translucent: any[];
    _vertices_translucent: any[];
    _uvs_translucent: any[];
    _indices_translucent: any[];
    _normals_translucent: any[];
    _layerIndices_translucent: any[];
    _colors_pattern: any[];
    _vertices_pattern: any[];
    _uvs_pattern: any[];
    _indices_pattern: any[];
    _normals_pattern: any[];
    _layerIndices_pattern: any[];
    _icons_pattern: any[];
    execute(layerIndex: any): void;
    getExecutedData(): {
        colors_water: any[];
        vertices_water: any[];
        uvs_water: any[];
        indices_water: any[];
        normals_water: any[];
        layerIndices_water: any[];
        colors_wood: any[];
        vertices_wood: any[];
        uvs_wood: any[];
        indices_wood: any[];
        normals_wood: any[];
        layerIndices_wood: any[];
        colors_opaque: any[];
        vertices_opaque: any[];
        uvs_opaque: any[];
        indices_opaque: any[];
        normals_opaque: any[];
        layerIndices_opaque: any[];
        colors_translucent: any[];
        vertices_translucent: any[];
        uvs_translucent: any[];
        indices_translucent: any[];
        normals_translucent: any[];
        layerIndices_translucent: any[];
        colors_pattern: any[];
        vertices_pattern: any[];
        uvs_pattern: any[];
        indices_pattern: any[];
        normals_pattern: any[];
        layerIndices_pattern: any[];
        icons_pattern: any[];
    };
    _getStyleValue(type: any, property: any): any;
    _getFillColor(): void;
    _loadGeometry(layerIndex: any): void;
    _getOutLineColor(): void;
    _getFillPattern(): void;
    _getRenderingAttributes(): {
        colors: any;
        vertices: any;
        uvs: any;
        indices: any;
        normals: any;
        layerIndices: any[];
        getIndexOffset: string;
        setIndexOffset: string;
    };
}
