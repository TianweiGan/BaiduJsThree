/**
 * Cesium地形瓦片提供者，用于加载和渲染Cesium地形数据。支持从Cesium ion服务器或自定义服务器加载地形数据，提供高质量的地形渲染。主要功能：
 * - 支持Cesium ion地形数据加载
 * - 支持自定义地形服务器
 * - 支持地形数据的上采样
 * - 支持多种投影方式（ECEF、Web墨卡托、地理坐标）
 *
 * 需要使用Cesium ion的Access Token，请在{@link CesiumConfig}中设置。
 * @category MapView
 * @example
 * ```javascript
 * // 使用默认Cesium ion服务器
 * const provider = new CesiumTerrainTileProvider({
 *     accessToken: 'your_access_token'
 * });
 * // 使用自定义地形服务器
 * const customProvider = new CesiumTerrainTileProvider({
 *     url: 'https://your-terrain-server'
 * });
 * ```
 */
export class CesiumTerrainTileProvider extends PlaneTerrainTileProvider {
    /**
     * 创建Cesium地形瓦片提供者
     * @param {object} options 配置选项
     * @param {string} [options.accessToken] Cesium ion访问令牌
     * @param {string} [options.url] 自定义地形服务器URL
     */
    constructor(options?: {
        accessToken?: string | undefined;
        url?: string | undefined;
    });
    /**
     * 瓦片提供者名称
     * @readonly
     */
    readonly name: "CesiumTerrainTileProvider";
    /**
     * Cesium地形服务器URL
     * @private
     * @type {string}
     */
    private _url;
    /**
     * 默认最大层级
     * @private
     * @type {number}
     */
    private _defaultMaxLevel;
    /**
     * 是否为默认Cesium服务器
     * @private
     * @type {boolean}
     */
    private _isDefaultCesium;
    _accessToken: string | null;
    /**
     * 异步初始化
     * @protected
     */
    protected _asyncInit(): Promise<void>;
    _layerConfig: any;
    _urlTemplate: string | undefined;
    _version: any;
    _availableTiles: any;
    _dataLoader: AsyncCesiumTerrainDataLoader | undefined;
    /**
     * 刷新访问令牌
     * @private
     */
    private _refreshAccessToken;
    _sessionToken: any;
    _lastRefreshTokenTime: number | undefined;
    /**
     * 检查并刷新访问令牌
     * @private
     */
    private _checkAndRefreshAccessToken;
    /**
     * 获取瓦片URL
     * @internal
     * @param {number} z 缩放级别
     * @param {number} x 瓦片X坐标
     * @param {number} y 瓦片Y坐标
     * @param {Tile} tile 瓦片对象
     * @returns {string} 瓦片URL
     */
    getTileURL(z: number, x: number, y: number, tile: Tile): string;
    /**
     * 获取请求选项
     * @internal
     * @returns {object} 请求选项
     */
    getFetchOptions(): object;
    /**
     * 检查瓦片是否可用
     * @internal
     * @param {number} z 缩放级别
     * @param {number} x 瓦片X坐标
     * @param {number} y 瓦片Y坐标
     * @returns {boolean|undefined} 瓦片是否可用
     */
    isTileAvailable(z: number, x: number, y: number): boolean | undefined;
    /**
     * 请求瓦片数据
     * @internal
     * @param {Tile} tile 需要请求的瓦片对象
     * @returns {Promise<BufferGeometry|null>} 返回包含地形数据的几何体或null
     */
    doRequestTileData(tile: Tile): Promise<BufferGeometry | null>;
}
import { PlaneTerrainTileProvider } from './PlaneTerrainTileProvider';
import { AsyncCesiumTerrainDataLoader } from '../AsyncCesiumTerrainDataLoader';
