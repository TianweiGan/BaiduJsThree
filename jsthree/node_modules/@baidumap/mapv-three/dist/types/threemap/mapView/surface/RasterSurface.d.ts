/**
 * 地形、影像瓦片数据加载的surface，用于加载地形、影像瓦片数据<br/>
 *
 * @category MapView
 * @example
 * ```javascript
 * const rasterSurface = new RasterSurface(terrainProvider, imageryProviders);
 * const mapView = engine.add(new MapView());
 * mapView.addSurface(rasterSurface);
 * ```
 */
export class RasterSurface extends MapSurface {
    /**
     * @param {TerrainProvider} terrainProvider - 地形提供者
     * @param {ImageryProvider[]} imageryProviders - 影像提供者
     * @param {Object} options - 选项参数
     */
    constructor(terrainProvider: TerrainProvider, imageryProviders: ImageryProvider[], options?: Object);
    isMapRasterSurface: boolean;
    _terrainProvider: TerrainProvider;
    _imageryProviders: ImageryProvider[];
    _surfaceTileManager: RasterSurfaceTileManager;
    addImageryLayer(imageProvider: any): void;
    removeImageryLayer(imageProvider: any): void;
    _getCurrentGrid(): any;
    /**
     * @internal
     * 更新最大级别。
     */
    _updateMaxLevel(): void;
    /**
     * @internal
     * 开始一个新帧。
     * @param renderState 渲染状态。
     */
    beginFrame(renderState: any): false | undefined;
    /**
     * 设置地形提供者
     */
    set terrainProvider(terrainProvider: TerrainProvider);
    /**
     * 获取地形提供者
     */
    get terrainProvider(): TerrainProvider;
    /**
     * 设置影像提供者
     */
    set imageryProviders(imageryProviders: ImageryProvider[]);
    /**
     * 获取影像提供者
     */
    get imageryProviders(): ImageryProvider[];
}
import { MapSurface } from './MapSurface';
import { RasterSurfaceTileManager } from '../tileManager/RasterSurfaceTileManager';
