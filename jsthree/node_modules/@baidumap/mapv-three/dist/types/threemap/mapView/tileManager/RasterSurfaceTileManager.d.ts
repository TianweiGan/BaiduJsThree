export class RasterSurfaceTileManager extends SurfaceTileManager {
    /** @private */
    private _tiles;
    forceUpdateTileState(tile: any): void;
    isTileNeedsLoading(tile: any): true | undefined;
    isTileComputable(tile: any): any;
    isTileRenderable(tile: any): boolean;
    isTileStable(tile: any): boolean;
    markTileUsed(tile: any): null | undefined;
    getSurfaceTile(tile: any, renderState: any): any;
    _updateSurfaceTileData(data: any): void;
    _getTileCoordConfig(targetTile: any, sourceTile: any): {
        offsetX: number;
        offsetY: number;
        scaleX: number;
        scaleY: number;
    };
    _getUpperSampleReadyTile(tile: any, tileProvider: any): any;
    _getCoverageTilesFromProvider(targetTile: any, tileProvider: any): any;
    _onlyRequestTileContents(data: any, onlyRequestToRenderable?: boolean): void;
    requestSurfaceTile(tile: any, onlyRequestToRenderable?: boolean): void;
    clear(): void;
}
import { SurfaceTileManager } from './SurfaceTileManager';
