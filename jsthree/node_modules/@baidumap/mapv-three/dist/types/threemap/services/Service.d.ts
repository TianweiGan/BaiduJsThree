/**
 * 服务类，一般不直接初始化，通过Service.fetch()方式去请求
 * // 基础使用
 * Service.fetch({
 *  url: 'http://hello.world.com',
 *  data: {
 *      a: 1,
 *      b: 2,
 *  },
 *  queryParameters: {
 *      query1: 1,
 *      query2: 2.
 *  },
 *  header: {
 *      'Content-Type': 'application/json'
 *  }
 * })
 *
 * // 错误重试
 * Service.fetch({
 *   url: 'http://hello.world.com',
 *   retryAttempts: 3,
 *   retryCallback: () => {
 *      console.log('请求重试');
 *      return true;
 *   }
 * })
 *
 */
export class Service {
    static host: string;
    static fetch(options: any): Promise<any>;
    constructor(options?: {});
    retryCallback: any;
    retryAttempts: any;
    queryParameters: any;
    _retryCount: number;
    retryOnError(error: any): Promise<any>;
    fetch(option?: {}): any;
    extractQuery(url: any): {};
    combineQueryParameters(q1: any, q2: any): any;
    objectToQuery(obj: any): string;
    stringifyQuery(queryObject: any): string;
    parseUrl(url: any): string;
    ajaxRequest(option: any): Promise<any>;
}
