/**
 * DOM覆盖物基类，用于在地图上添加HTML元素。支持自定义位置、偏移和拖拽功能。
 *
 * @category Objects
 * @example
 * ```javascript
 * // 创建一个基础DOM覆盖物
 * const overlay = engine.add(new mapvthree.DOMOverlay({
 *     point: [116.404, 39.915, 0],
 *     dom: document.createElement('div'),
 *     offset: [0, 0],
 *     enableDragging: true
 * }));
 *
 * // 创建一个HTML字符串的覆盖物
 * const htmlOverlay = engine.add(new mapvthree.DOMOverlay({
 *     point: [116.404, 39.915, 0],
 *     dom: '<div class="custom-overlay">Hello World</div>'
 * }));
 * ```
 */
export class DOMOverlay {
    /**
     * 创建DOM覆盖物
     * @param {Object} parameters 配置参数
     * @param {HTMLElement|string} parameters.dom DOM元素或HTML字符串
     * @param {Array<number>} [parameters.point] 位置坐标 [经度,纬度,高度]
     * @param {Array<number>} [parameters.offset=[0,0]] 像素偏移量, 默认值：[0, 0]
     * @param {boolean} [parameters.visible=true] 是否可见，默认值：true
     * @param {boolean} [parameters.enableDragging=false] 是否可拖拽，默认值：false
     * @param {string} [parameters.className] CSS类名
     */
    constructor(parameters?: {
        dom: HTMLElement | string;
        point?: number[] | undefined;
        offset?: number[] | undefined;
        visible?: boolean | undefined;
        enableDragging?: boolean | undefined;
        className?: string | undefined;
    });
    /** @private */ private _container;
    /** @private */ private _point;
    /** @private */ private _dom;
    /** @private */ private _div;
    /** @private */ private _visible;
    /** @private */ private _offset;
    /** @private */ private _stopPropagation;
    /** @private */ private _enableDragging;
    isDOMOverlay: boolean;
    parameters: {
        dom: HTMLElement | string;
        point?: number[] | undefined;
        offset?: number[] | undefined;
        visible?: boolean | undefined;
        enableDragging?: boolean | undefined;
        className?: string | undefined;
    };
    /**
     * @internal
     * 添加overlay Dom
     * 1.maptype 为bmapgl时，container.children为undefined;2.maptype 为mapbox时，存在overlay Dom，但层级为最底层
     */
    afterAddToEngine(engine: any): void;
    engine: any;
    /**
     * 设置DOM元素
     * @param {HTMLElement|string} value DOM元素或HTML字符串
     * @example
     * ```javascript
     * const dom = document.createElement('div');
     * dom.className = 'custom-overlay';
     * dom.innerHTML = 'Hello World';
     * overlay.dom = dom;
     * ```
     * @example
     * ```javascript
     * const domString = `
     *     <div class="dom-overlay-custom">
     *         <div class="overlay-body">
     *             <div class="overlay-title">Hello World</div>
     *         </div>
     *      </div>
     * `
     * overlay.dom = domString
     * ```
     */
    set dom(value: HTMLElement | string);
    /**
     * 获取DOM元素
     * @type {HTMLElement}
    */
    get dom(): HTMLElement;
    /**
     * 设置坐标位置
     * @param {Array<number>} value 坐标位置 [经度, 纬度, 高度]
     * @example
     * ```javascript
     * overlay.point = [116.404, 39.915, 0];
     * ```
     */
    set point(value: Array<number>);
    /**
     * 坐标位置 [经度, 纬度, 高度]
     * @type {Array<number>}
     */
    get point(): Array<number>;
    /**
     * 设置像素偏移量
     * @param {Array<number>} value 像素偏移量 [x, y]
     * @example
     * ```javascript
     * overlay.offset = [10, 10];
     * ```
     */
    set offset(value: Array<number>);
    /**
     * 像素偏移量 [x, y]，默认值：[0, 0]
     * @type {Array<number>}
     */
    get offset(): Array<number>;
    /**
     * 设置CSS类名
     * @param {string} className CSS类名
     * @example
     * ```javascript
     * overlay.className = 'custom-overlay';
     * ```
     */
    set className(className: string);
    /**
     * CSS类名
     * @type {string}
     */
    get className(): string;
    /**
     * 设置是否启用拖拽
     * @param {boolean} value 是否启用拖拽
     * @example
     * ```javascript
     * overlay.enableDragging = true;
     * ```
     */
    set enableDragging(value: boolean);
    /**
     * 是否启用拖拽，默认值：false
     * @type {boolean}
     */
    get enableDragging(): boolean;
    /**
     * 设置是否可见
     * @param {boolean} value 是否可见
     * @example
     * ```javascript
     * overlay.visible = false;
     * ```
     */
    set visible(value: boolean);
    /**
     * 是否可见，默认值：true
     * @type {boolean}
     */
    get visible(): boolean;
    beforeRemoveFromEngine(engine: any): void;
    /**
     * @internal
     * 初始化dom
     */
    initDom(): string | HTMLElement | undefined;
    afterInit(): void;
    onBeforeScenePrepareRender(engine: any, scene: any, camera: any): void;
    camera: any;
    renderer: any;
    _screenPos: any;
    onDispose(): void;
    /**
     * 内存释放
     */
    dispose(): void;
    /**
     * 设置是否阻止事件冒泡
     * @param {boolean} value 是否阻止事件冒泡
     * @example
     * ```javascript
     * overlay.stopPropagation = true;
     * ```
     */
    set stopPropagation(value: boolean);
    /**
     * 是否阻止事件冒泡，默认值：false
     * @type {boolean}
     */
    get stopPropagation(): boolean;
    _className: any;
    handleMouseDown: (e: any) => void;
    _sub: any;
    handleMouseUp: (e: any) => void;
    handleMouseMove: (e: any) => void;
    handleWheel: (e: any) => void;
}
