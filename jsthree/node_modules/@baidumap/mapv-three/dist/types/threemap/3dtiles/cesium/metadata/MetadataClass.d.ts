export default class MetadataClass {
    static BATCH_TABLE_CLASS_NAME: string;
    static fromJson(options: any): MetadataClass;
    constructor(options: any);
    _id: any;
    _name: any;
    _description: any;
    _properties: any;
    _propertiesBySemantic: {};
    _extras: any;
    _extensions: any;
    /**
   * The class properties.
   *
   * @type {Object<string, MetadataClassProperty>}
   * @readonly
   */
    readonly get properties(): {
        [x: string]: MetadataClassProperty;
    };
    /**
   * A dictionary mapping semantics to class properties.
   *
   * @type {Object<string, MetadataClassProperty>}
   * @readonly
   *
   * @private
   */
    private readonly get propertiesBySemantic();
    /**
   * The ID of the class.
   *
   * @type {string}
   * @readonly
   */
    readonly get id(): string;
    /**
   * The name of the class.
   *
   * @type {string}
   * @readonly
   */
    readonly get name(): string;
    /**
   * The description of the class.
   *
   * @type {string}
   * @readonly
   */
    readonly get description(): string;
    /**
   * Extra user-defined properties.
   *
   * @type {*}
   * @readonly
   */
    readonly get extras(): any;
    /**
   * An object containing extensions.
   *
   * @type {object}
   * @readonly
   */
    readonly get extensions(): object;
}
import MetadataClassProperty from './MetadataClassProperty';
