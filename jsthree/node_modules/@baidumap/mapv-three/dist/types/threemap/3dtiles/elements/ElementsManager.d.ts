export class ElementsManager {
    constructor(parent: any);
    /** @private */
    private _tileMaxLevel;
    /** @private */
    private _subscribedMaxLodLevel;
    /** @private */
    private _elementHandlers;
    /** @private */
    private _objectParent;
    subscribedDataTypeMap: {};
    /** @private */
    private _active;
    /** @private */
    private _configVersion;
    registerElement(element: any): any;
    unregisterElement(element: any): void;
    shouldIgnoreTile: (tile: any) => boolean;
    parseElements: (tile: any) => void;
    getInterleavedBufferValue2: (attribute: any, index: any) => any[];
    getInterleavedBufferValue3: (attribute: any, index: any) => any[];
    findElementInMesh: (mesh: any, matchedBatchIdMap: any, matchedElementMap: any) => void;
    onTileLoad: (tile: any, scene: any) => void;
    onTileDispose: (tile: any, scene: any) => void;
    onTileShow: (tile: any) => void;
    onTileHide: (tile: any) => void;
    parseTileInfo: (tile: any) => void;
    refreshTile: (tile: any) => void;
    refreshTiles: () => void;
    tick(time: any): void;
    set subscribedMaxLodLevel(value: number);
    get subscribedMaxLodLevel(): number;
}
