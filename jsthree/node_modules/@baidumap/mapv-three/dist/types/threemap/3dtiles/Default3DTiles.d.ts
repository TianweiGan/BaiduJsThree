/**
 * 3D Tiles加载器，用于加载和渲染3D Tiles数据。
 * 支持从URL或Cesium Ion asset ID加载3D Tiles，并提供坐标转换、相机视角锁定等功能。
 *
 * @category 3DTiles
 * @example
 * ```javascript
 * // 从URL加载3D Tiles
 * const tileset = engine.add(new mapvthree.Default3DTiles({
 *     url: 'path/to/tileset.json',
 *     errorTarget: 16
 * }));
 *
 * // 从Cesium Ion asset ID加载
 * const tileset = await mapvthree.Default3DTiles.fromAssetId('assetId', {
 *     errorTarget: 16
 * });
 * ```
 */
export class Default3DTiles extends Cesium3DTileset {
    /**
     * 从Cesium Ion asset ID创建3D Tiles实例
     * @param {number} assetId Cesium Ion asset ID
     * @param {Object} [options={}] 配置参数
     * @returns {Promise<Default3DTiles>} 返回3D Tiles实例
     * @example
     * ```javascript
     * const tileset = await mapvthree.Default3DTiles.fromAssetId('assetId', {
     *     errorTarget: 16
     * });
     * ```
     */
    static fromAssetId(assetId: number, options?: Object): Promise<Default3DTiles>;
    /**
     * 构造函数
     * @param {Object} options 配置参数
     * @param {string} [options.url] 3D Tiles的URL地址
     * @param {number} [options.assetId] Cesium Ion asset ID
     * @param {number} [options.errorTarget=64] 屏幕空间误差目标值
     * @param {boolean} [options.forceUnlit=false] 是否强制使用无光照模式
     * @param {boolean} [options.cullWithChildrenBounds=true] 是否使用子节点边界进行剔除
     * @param {boolean} [options.cullRequestsWhileMoving=true] 移动时是否剔除请求
     * @param {number} [options.cullRequestsWhileMovingMultiplier=60] 移动时剔除请求的乘数
     * @param {boolean} [options.dynamicScreenSpaceError=true] 是否使用动态屏幕空间误差
     * @param {number} [options.dynamicScreenSpaceErrorHeightFalloff=0.25] 动态屏幕空间误差高度衰减
     * @param {number} [options.dynamicScreenSpaceErrorDensity=0.00278] 动态屏幕空间误差密度
     * @param {boolean} [options.foveatedScreenSpaceError=false] 是否使用注视点屏幕空间误差
     * @param {number} [options.foveatedConeSize=0.3] 注视点锥体大小
     * @param {number} [options.foveatedMinimumScreenSpaceErrorRelaxation=0.8] 注视点最小屏幕空间误差松弛值
     * @param {number} [options.progressiveResolutionHeightFraction=0.5] 渐进式分辨率高度分数
     * @param {number} [options.cacheBytes] 缓存字节数
     * @param {number} [options._maximumCacheOverflowBytes] 最大缓存溢出字节数
     * @param {Object} [options.loaders] 加载器配置
     */
    constructor(options: {
        url?: string | undefined;
        assetId?: number | undefined;
        errorTarget?: number | undefined;
        forceUnlit?: boolean | undefined;
        cullWithChildrenBounds?: boolean | undefined;
        cullRequestsWhileMoving?: boolean | undefined;
        cullRequestsWhileMovingMultiplier?: number | undefined;
        dynamicScreenSpaceError?: boolean | undefined;
        dynamicScreenSpaceErrorHeightFalloff?: number | undefined;
        dynamicScreenSpaceErrorDensity?: number | undefined;
        foveatedScreenSpaceError?: boolean | undefined;
        foveatedConeSize?: number | undefined;
        foveatedMinimumScreenSpaceErrorRelaxation?: number | undefined;
        progressiveResolutionHeightFraction?: number | undefined;
        cacheBytes?: number | undefined;
        _maximumCacheOverflowBytes?: number | undefined;
        loaders?: Object | undefined;
    });
    /** @private */
    private _showDebug;
    _errorTarget: any;
    _resource: any;
    /**
     * 将ECEF坐标转换为平面坐标
     * @internal
     * @param {number} lng 经度
     * @param {number} lat 纬度
     * @param {number} [height=0] 高程
     */
    transformFromEcefToPlane: (lng: number, lat: number, height?: number) => void;
    /** @private */
    private _updateCameraHelper;
    _cameraHelper: any;
    /** @private */
    private _destroyCameraHelper;
    /**
     * 锁定相机视角
     * @example
     * ```javascript
     * tileset.lockCameraViewport();
     * ```
     */
    lockCameraViewport: () => void;
    _lockedCamera: any;
    /**
     * 释放相机视角锁定
     * @example
     * ```javascript
     * tileset.releaseCameraViewport();
     * ```
     */
    releaseCameraViewport: () => void;
    /**
     * 设置是否显示调试信息
     * @param {boolean} value 是否显示调试信息
     */
    set showDebug(value: boolean);
    /**
     * 是否显示调试信息
     * @type {boolean}
     */
    get showDebug(): boolean;
    /**
     * 设置屏幕空间误差目标值
     * @param {number} value 误差目标值
     */
    set errorTarget(value: number);
    /**
     * 屏幕空间误差目标值
     * @type {number}
     */
    get errorTarget(): number;
    /**
     * 设置是否使用子节点边界进行剔除
     * @param {boolean} value 是否使用子节点边界进行剔除
     */
    set cullWithChildrenBounds(value: boolean);
    /**
     * 是否使用子节点边界进行剔除
     * @type {boolean}
     */
    get cullWithChildrenBounds(): boolean;
    /**
     * 设置移动时是否剔除请求
     * @param {boolean} value 移动时是否剔除请求
     */
    set cullRequestsWhileMoving(value: boolean);
    /**
     * 移动时是否剔除请求
     * @type {boolean}
     */
    get cullRequestsWhileMoving(): boolean;
    /**
     * 设置注视点锥体大小
     * @param {number} value 注视点锥体大小
     */
    set foveatedConeSize(value: number);
    /**
     * 注视点锥体大小
     * @type {number}
     */
    get foveatedConeSize(): number;
    /**
     * 设置是否加载兄弟节点
     * @param {boolean} value 是否加载兄弟节点
     */
    set loadSiblings(value: boolean);
    /**
     * 是否加载兄弟节点
     * @type {boolean}
     */
    get loadSiblings(): boolean;
    _loadSiblings: boolean | undefined;
}
import { Cesium3DTileset } from './cesium/Cesium3DTileset';
