export default class MetadataClassProperty {
    static fromJson(options: any): MetadataClassProperty;
    constructor(options: any);
    _id: any;
    _name: any;
    _description: any;
    _semantic: any;
    _isLegacyExtension: any;
    _type: any;
    _componentType: any;
    _enumType: any;
    _valueType: any;
    _isArray: any;
    _isVariableLengthArray: any;
    _arrayLength: any;
    _min: any;
    _max: any;
    _normalized: any;
    _offset: any;
    _scale: any;
    _hasValueTransform: boolean;
    _noData: any;
    _default: any;
    _required: any;
    _extras: any;
    _extensions: any;
    normalize(value: any): any;
    unnormalize(value: any): any;
    applyValueTransform(value: any): any;
    unapplyValueTransform(value: any): any;
    expandConstant(constant: any, enableNestedArrays: any): any;
    handleNoData(value: any): any;
    unpackVectorAndMatrixTypes(value: any, enableNestedArrays: any): any;
    packVectorAndMatrixTypes(value: any): string | undefined;
    valueTransformInPlace(values: any, offsets: any, scales: any, transformationFunction: any): any;
    get id(): any;
    get name(): any;
    get description(): any;
    get type(): any;
    get enumType(): any;
    get componentType(): any;
    get valueType(): any;
    get isArray(): any;
    get isVariableLengthArray(): any;
    get arrayLength(): any;
    get normalized(): any;
    get max(): any;
    get min(): any;
    get noData(): any;
    get default(): any;
    get required(): any;
    get semantic(): any;
    get hasValueTransform(): boolean;
    get offset(): any;
    get scale(): any;
    get extras(): any;
    get extensions(): any;
}
