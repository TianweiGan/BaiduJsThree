/**
 * An availability bitstream for use in an {@link ImplicitSubtree}. This handles
 * both Uint8Array bitstreams and constant values.
 *
 * @alias ImplicitAvailabilityBitstream
 * @constructor
 *
 * @param {object} options An object with the following properties:
 * @param {number} options.lengthBits The length of the bitstream in bits
 * @param {boolean} [options.constant] A single boolean value indicating the value of all
 * the bits in the bitstream if they are all the same
 * @param {Uint8Array} [options.bitstream] An array of bytes storing the bitstream in binary
 * @param {number} [options.availableCount] A number indicating how many 1 bits are found in the bitstream
 * @param {boolean} [options.computeAvailableCountEnabled=false] If true, and options.availableCount
 * is undefined, the availableCount will be computed from the bitstream.
 * @private
 * @experimental This feature is using part of the 3D Tiles spec that is
 * not final and is subject to change without Cesium's standard deprecation policy.
 */
export default class ImplicitAvailabilityBitstream {
    constructor(options: any);
    _lengthBits: any;
    _availableCount: any;
    _constant: any;
    _bitstream: any;
    /**
     * Get a bit from the availability bitstream as a Boolean. If the bitstream
     * is a constant, the constant value is returned instead.
     *
     * @param {number} index The integer index of the bit.
     * @returns {boolean} The value of the bit
     * @private
     */
    private getBit;
    get lengthBits(): any;
    get availableCount(): any;
}
