/**
 * 裁剪面集合
 */
export class ClippingPlaneCollection {
    static fromPoints(engine: any, points: any, options?: {}): ClippingPlaneCollection;
    constructor(engine: any, options?: {});
    /** @private */
    private _planes;
    /** @private */
    private _dirtyIndex;
    /** @private */
    private _multipleDirtyPlanes;
    /** @private */
    private _enabled;
    /** @private */
    private _clippingPlanesTexture;
    /** @private */
    private _useFloatPointTexture;
    /** @private */
    private _uint8View;
    /** @private */
    private _float32View;
    isClippingPlaneCollection: boolean;
    _engine: any;
    options: {};
    modelMatrix: any;
    getDefaultOptions(): {};
    _setIndexDirty(index: any): void;
    _packPlanesAsFloats(startIndex: any, endIndex: any): void;
    _computeTextureResolution(pixelsNeeded: any): any;
    /**
     * 更新纹理信息，第一次会更新全部纹理，后面可以进行局部更新
     */
    update(): void;
    /**
     * 获取pack裁剪面信息的texture的分辨率
     */
    getTextureResolution(): any;
    /**
     * 销毁，释放资源
     */
    destroy(): void;
    /**
     * 添加裁剪面
     */
    add(plane: any): void;
    /**
     * 移除裁剪面
     */
    remove(plane: any): boolean;
    /**
     * 移除所有裁剪面
     */
    removeAll(): void;
    /**
     * 获得裁剪面
     */
    get(index: any): any;
    get texture(): undefined;
    get length(): number;
    set enabled(value: boolean);
    get enabled(): boolean;
}
