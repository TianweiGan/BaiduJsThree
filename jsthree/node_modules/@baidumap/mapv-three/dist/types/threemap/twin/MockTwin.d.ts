export class MockTwin {
    /**
     * 构造函数，用于创建新的对象实例
     *
     * @param twinConfig 孪生配置参数，默认为空对象，参考Twin
     * @param data 数据 线的geojson或者[[x,y], [x,y] ... ]点数组
     * @param probabilityConfig 概率配置参数，默认为空对象 {[key]: probability} key为color或者modelType
     */
    constructor(twinConfig: {} | undefined, data: any, probabilityConfig?: {});
    /** @private */
    private _speed;
    /** @private */
    private _gap;
    /** @private */
    private _twin;
    /** @private */
    private _twinConfig;
    /** @private */
    private _interval;
    /** @private */
    private _probabilityConfig;
    _data: any;
    afterAddToEngine(engine: any): void;
    _engine: any;
    onBeforeSceneRender(): void;
    onBeforeScenePrepareRender(engine: any, scene: any, camera: any, renderState: any): void;
    /**
     * 初始化MOCK线条数据
     * @private
     *
     * @param data 线条数据
     * @param engine 引擎
     * @returns 返回PathTracker对象
     */
    private _initLine;
    _line: PathTracker | undefined;
    /**
     * 获取随机配置
     * @private
     *
     * @returns {Object} 包含随机颜色和模型类型的对象
     */
    private _getRandomConfig;
    start(options?: {}): void;
    clear(): void;
    visibleCallback(): any;
    dispose(): void;
    set data(value: any);
    get data(): any;
    set speed(value: number);
    get speed(): number;
    set gap(value: number);
    get gap(): number;
    set probabilityConfig(value: {});
    get probabilityConfig(): {};
}
import { PathTracker } from '../animations/PathTracker';
