/**
 * 点编辑器
 * ```js
 * const pointEditor = engine.add(new mapvthree.PointEditor(engine, {
 *  pointColor: '#f00',
 *  pointSize: 20,
 * }));
 * ```
 */
export class PointEditor extends Editor {
    /**
     * @param { Object } options 绘制点参数
     * @param {string} options.pointColor 点颜色,默认为'rgb(200, 200, 50)'
     * @param {string} options.pointSize 点尺寸，默认为10
     * @param {Object} options.point 绘制中展示的元素，可以传入一个已经创建好的点对象，如果传入则默认散点
     * @param {Object} options.completeElement 绘制完成展示元素，可以传入一个已经创建好的点对象，如果传入则默认散点
     */
    constructor(engine: any, options?: {
        pointColor: string;
        pointSize: string;
        point: Object;
        completeElement: Object;
    });
    /** @private */
    private _pointData;
    /**
     * @protected
     * 是否允许编辑
     */
    protected _enableEdit: boolean;
    /** @private */ private _engine;
    /** @private */ private _options;
    /** @private */ private _point;
    /** @private */ private _pointDataSource;
    /** @private */ private _completedDataSource;
    /** @private */ private _completedElement;
    /** @private */ private _isAdd;
    /** @private */ private _selectedIndex;
    /** @private */ private _transformIndex;
    set point(value: any);
    /**
     * 自定义点元素
     */
    get point(): any;
    private set completeElement(value);
    /**
     * @private 绘制完成元素
     */
    private get completeElement();
    /** @private */
    private initPoint;
    _helpers: any;
    /** @private */
    private initCompleteElement;
    /** @private */
    private graphInfo;
    /** @private */
    private _handleAddClick;
    /**
     * @private
     * 切换编辑的元素
     */
    private _handleCompleteClick;
    private set vertex(value);
    /** @private */
    private get vertex();
    /** @private */
    private _handleAddFinish;
    /** @private */
    private _handleNodeClick;
    /** @private */
    private _handleTransformChanging;
    /** @private */
    private _handleTransformChanged;
    /** @private */
    private addNode;
    /** @private */
    private updateNode;
    /**
     * @private
     */
    private clearObjects;
    /** @private */
    private dispose;
    /** @private */
    private overwriteNodes;
    /** @private */
    private _getProperties;
    _vertex: any;
    set data(value: any);
    /**
     * 绘制的点的数据信息
     */
    get data(): any;
}
import { Editor } from './Editor';
